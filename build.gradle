buildscript {
    repositories {
        maven { url 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'

version = '5.0.0'
group = 'me.paulf.fairylights'
archivesBaseName = 'fairylights'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.18.2'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fairylights'
            args '--width', '1280', '--height', '720'
            mods {
                fairylights {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fairylights'
            mods {
                fairylights {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fairylights'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'fairylights', '--all', '--output', file('src/generated/resources/')
            mods {
                fairylights {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'Progwml6 maven'
        url = 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name = 'ModMaven'
        url = 'https://modmaven.dev'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.85'
    compileOnly fg.deobf('mezz.jei:jei-1.18.2:9.7.2.281:api')
    runtimeOnly fg.deobf('mezz.jei:jei-1.18.2:9.7.2.281')
}

jar {
    classifier '1.18.2'
    exclude '.cache'
    manifest {
        attributes([
                "Specification-Title"     : "fairylights",
                "Specification-Vendor"    : "pau101",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "pau101",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def vars = [
        'version': project.version
    ]
    inputs.properties(vars)
    from (sourceSets.main.resources.srcDirs) {
        include('META-INF/mods.toml')
        expand(vars)
    }
    from (sourceSets.main.resources.srcDirs) {
        exclude('META-INF/mods.toml')
        exclude('**/*.xcf')
    }
}
